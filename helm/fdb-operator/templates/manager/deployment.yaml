---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fdb-operator.fullname" . }}
  labels:
    {{- include "fdb-operator.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.replicas }}
  replicas: {{ . }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fdb-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "fdb-operator.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "fdb-operator.serviceAccountName" . }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      terminationGracePeriodSeconds: 10
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: foundationdb-kubernetes-init-6-1
        {{- with .Values.initContainers.init_6_1.image }}
        image: {{ .repository }}:{{ .tag }}
        imagePullPolicy: {{ .pullPolicy }}
        {{- end }}
        args:
        - "--copy-library"
        - "6.1"
        - "--copy-binary"
        - "fdbcli"
        - "--copy-binary"
        - "fdbbackup"
        - "--copy-binary"
        - "fdbrestore"
        - "--output-dir"
        - "/var/output-files/6.1.12"
        - "--init-mode"
        volumeMounts:
        - name: fdb-binaries
          mountPath: /var/output-files
        resources:
          {{- toYaml .Values.initContainers.resources | nindent 10 }}
      - name: foundationdb-kubernetes-init-6-2
        {{- with .Values.initContainers.init_6_2.image }}
        image: {{ .repository }}:{{ .tag }}
        imagePullPolicy: {{ .pullPolicy }}
        {{- end }}
        args:
        - "--copy-library"
        - "6.2"
        - "--copy-binary"
        - "fdbcli"
        - "--copy-binary"
        - "fdbbackup"
        - "--copy-binary"
        - "fdbrestore"
        - "--output-dir"
        - "/var/output-files/6.2.30"
        - "--init-mode"
        volumeMounts:
        - name: fdb-binaries
          mountPath: /var/output-files
        resources:
          {{- toYaml .Values.initContainers.resources | nindent 10 }}
      - name: foundationdb-kubernetes-init-6-3
        {{- with .Values.initContainers.init_6_3.image }}
        image: {{ .repository }}:{{ .tag }}
        imagePullPolicy: {{ .pullPolicy }}
        {{- end }}
        args:
        - "--copy-library"
        - "6.3"
        - "--copy-binary"
        - "fdbcli"
        - "--copy-binary"
        - "fdbbackup"
        - "--copy-binary"
        - "fdbrestore"
        - "--output-dir"
        - "/var/output-files/6.3.10"
        - "--init-mode"
        volumeMounts:
        - name: fdb-binaries
          mountPath: /var/output-files
        resources:
          {{- toYaml .Values.initContainers.resources | nindent 10 }}
      containers:
      - name: manager
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /manager
        env:
        - name: FDB_NETWORK_OPTION_EXTERNAL_CLIENT_DIRECTORY
          value: /usr/bin/fdb
        {{- if not .Values.globalMode.enabled }}
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- end }}
        ports:
        - containerPort: 8080
          name: metrics
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /var/log/fdb
        - name: fdb-binaries
          mountPath: /usr/bin/fdb
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      - name: fdb-binaries
        emptyDir: {}
